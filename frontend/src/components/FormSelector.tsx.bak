import { useState } from "react";
import { Link } from "react-router-dom";

interface TemplateOption {
  id: string;
  name: string;
  description: string;
  example?: string;
  icon: string;
  color: string;
}

export function FormSelector() {
  const [searchTerm, setSearchTerm] = useState("");
  
  const templates: TemplateOption[] = [
    {
      id: "medical-certificate",
      name: "Certificado M√©dico",
      description: "Generar certificados m√©dicos de diversos tipos",
      example: "Certificado de aptitud, baja por enfermedad",
      icon: "ü©∫",
      color: "bg-emerald-100 text-emerald-700 ring-emerald-600/20"
    },
    {
      id: "patient-report",
      name: "Informe de Paciente",
      description: "Crear informes detallados del historial m√©dico",
      example: "Historial, tratamientos, evoluci√≥n",
      icon: "üìã",
      color: "bg-blue-100 text-blue-700 ring-blue-600/20"
    },
    {
      id: "prescription",
      name: "Receta M√©dica",
      description: "Generar recetas de medicamentos",
      example: "Medicaci√≥n prescrita con dosificaci√≥n",
      icon: "üíä",
      color: "bg-red-100 text-red-700 ring-red-600/20"
    },
    {
      id: "appointment-reminder",
      name: "Recordatorio de Cita",
      description: "Crear recordatorios de pr√≥ximas citas",
      example: "Fecha, hora, preparaci√≥n necesaria",
      icon: "üóìÔ∏è",
      color: "bg-amber-100 text-amber-700 ring-amber-600/20"
    },
    {
      id: "referral-letter",
      name: "Carta de Derivaci√≥n",
      description: "Redactar derivaciones a especialistas",
      example: "Motivo de derivaci√≥n, historial relevante",
      icon: "‚úâÔ∏è",
      color: "bg-purple-100 text-purple-700 ring-purple-600/20"
    },
    {
      id: "clinical-analysis",
      name: "An√°lisis Cl√≠nicos",
      description: "Generar informes de resultados de pruebas",
      example: "Valores, rangos normales, interpretaci√≥n",
      icon: "üß™",
      color: "bg-cyan-100 text-cyan-700 ring-cyan-600/20"
    }
  ];
  
  const filteredTemplates = templates.filter(template => 
    template.name.toLowerCase().includes(searchTerm.toLowerCase()) || 
    template.description.toLowerCase().includes(searchTerm.toLowerCase())
  );
  
  return (
    <div className="py-10 px-4 sm:px-6 lg:px-8">
      <div className="max-w-4xl mx-auto">
        <div className="mb-8 text-center">
          <h1 className="text-3xl font-extrabold text-gray-900 sm:text-4xl">
            Generador de Documentos
          </h1>
          <p className="mt-3 text-xl text-gray-500">
            Crea informes y documentos PDF personalizados de manera r√°pida y sencilla.
          </p>
        </div>
        
        <div className="mb-8">
          <div className="relative rounded-md shadow-sm">
            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg className="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fillRule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clipRule="evenodd" />
              </svg>
            </div>
            <input
              type="text"
              className="focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 pr-3 py-3 border-gray-300 rounded-md text-gray-900 placeholder-gray-500"
              placeholder="Buscar plantillas..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
          </div>
        </div>
        
        <div className="mb-12 bg-white overflow-hidden shadow rounded-lg divide-y divide-gray-200">
          <div className="px-6 py-5 bg-gray-50">
            <h3 className="text-lg font-medium text-gray-900">Plantillas de Documentos</h3>
            <p className="mt-1 text-sm text-gray-500">
              Selecciona una plantilla para empezar a generar tu documento
            </p>
          </div>
          
          <div className="px-6 py-5">
            <ul role="list" className="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
              {filteredTemplates.map((template) => (
                <li key={template.id} className="col-span-1 bg-white rounded-lg shadow border hover:shadow-md transition-shadow duration-200">
                  <Link to={`/form/${template.id}`} className="block">
                    <div className="p-5">
                      <div className="flex items-center">
                        <div className={`rounded-lg p-3 ${template.color}`}>
                          <span className="text-2xl" role="img" aria-label={template.name}>
                            {template.icon}
                          </span>
                        </div>
                        <div className="ml-4">
                          <h3 className="text-lg font-medium text-gray-900">{template.name}</h3>
                          <p className="text-sm text-gray-500 mt-1">{template.description}</p>
                        </div>
                      </div>
                      
                      {template.example && (
                        <div className="mt-4 text-xs text-gray-500">
                          <span className="font-medium">Ejemplos:</span> {template.example}
                        </div>
                      )}
                    </div>
                  </Link>
                </li>
              ))}
            </ul>
          </div>
        </div>
        
        <div className="mb-8 flex flex-col md:flex-row gap-6">
          <div className="flex-1 bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow duration-200">
            <Link to="/legacy-form" className="block p-6">
              <div className="flex items-center">
                <div className="rounded-lg p-3 bg-indigo-100 text-indigo-700 ring-indigo-600/20">
                  <span className="text-2xl" role="img" aria-label="PDFMonkey">üêµ</span>
                </div>
                <div className="ml-4">
                  <h3 className="text-lg font-medium text-gray-900">
                    Plan de Prevenci√≥n con PDFMonkey
                  </h3>
                  <p className="text-sm text-gray-500 mt-1">
                    Versi√≥n que utiliza la API de PDFMonkey para generar el documento
                  </p>
                </div>
              </div>
            </Link>
          </div>
          
          <div className="flex-1 bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow duration-200">
            <Link to="/legacy-form" className="block p-6">
              <div className="flex items-center">
                <div className="rounded-lg p-3 bg-green-100 text-green-700 ring-green-600/20">
                  <span className="text-2xl" role="img" aria-label="ReactPDF">üìÑ</span>
                </div>
                <div className="ml-4">
                  <h3 className="text-lg font-medium text-gray-900">
                    Plan de Prevenci√≥n con React-PDF
                  </h3>
                  <p className="text-sm text-gray-500 mt-1">
                    Genera PDFs directamente en el navegador con React-PDF
                  </p>
                </div>
              </div>
            </Link>
          </div>
        </div>
        
      </div>
    </div>
  );
} 