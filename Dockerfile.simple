FROM node:18-slim as frontend-build

WORKDIR /app

# Increase memory limit for Node.js
ENV NODE_OPTIONS=--max_old_space_size=2048

# Install frontend dependencies
COPY frontend/package*.json ./frontend/
RUN cd frontend && npm install

# Copy frontend source code
COPY frontend/ ./frontend/

# Build frontend
RUN cd frontend && npm run build

# Python stage
FROM python:3.9-slim

WORKDIR /app

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    postgresql-client \
    netcat-openbsd \
    gcc \
    python3-dev \
    libpq-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies directly
RUN pip install --no-cache-dir \
    Django>=4.2 \
    djangorestframework \
    requests \
    python-decouple \
    gunicorn==21.2.0 \
    whitenoise==6.5.0 \
    psycopg2-binary==2.9.8 \
    dj-database-url==2.1.0

# Copy backend code
COPY backend/ ./backend/

# Copy frontend build from the previous stage
COPY --from=frontend-build /app/frontend/dist ./frontend/build/

# Copy startup script
COPY run.sh ./
RUN chmod +x run.sh

# Collect static files
RUN cd backend && python manage.py collectstatic --noinput

# Expose port
EXPOSE 8000

# Start the application
CMD ["./run.sh"] 