version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - PDFMONKEY_API_KEY=${PDFMONKEY_API_KEY}
      - PDFMONKEY_PREVENTION_TEMPLATE_ID=${PDFMONKEY_PREVENTION_TEMPLATE_ID}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,railway.app}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-https://railway.app,http://localhost:5173}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${PORT:-80}:80"
    volumes:
      - ./frontend/nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - BACKEND_URL=${BACKEND_URL:-http://backend:8000}
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-pdfcreator}
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume: 